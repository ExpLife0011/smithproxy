#!/bin/bash
# /etc/init.d/smithproxy
#

### BEGIN INIT INFO
# Provides:          smithproxy
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start smithproxy daemons at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

# Some things that run always
# touch /var/lock/smithproxy

# Carry out specific functions when asked to by the system


. /lib/lsb/init-functions


# Let initialize tenant ID
tenant_id=""
if [[ "$2" != "" ]]; then
    tenant_id="$2"
fi

function do_cmd {
    CMD=$1
    TENID=$2

    if [[ "$TENID"  != "" ]]; then
        echo "${CMD}ing smithproxy - tenant $TENID"
        /etc/smithproxy/smithproxy.startup.sh ${CMD} $TENID
        python2 /usr/share/smithproxy/infra/smithdog.py ${CMD} $TENID
    else
    
        if [[ ! -f "/etc/smithproxy/smithproxy.tenants.cfg" ]]; then
            TENID="0"
            do_cmd $CMD $TENID
            return
        fi
    
        echo "${CMD}ing smithproxy - all tenants"
        for l in `cat /etc/smithproxy/smithproxy.tenants.cfg | awk -F\; '{ print $2 }'`; do 
            echo " ${CMD}ing tenant $l"; 
            do_cmd ${CMD} "$l"
        done;
    fi
}

function do_start {
    do_cmd "start" $tenant_id
}

function do_stop {
    do_cmd "stop" $tenant_id
}

function do_bypass {
    do_cmd "bypass" $tenant_id
}

function do_unbypass {
    do_cmd "unbypass" $tenant_id
}


case "$1" in
  start)
    do_start $tenant_id
    ;;
  stop)
    do_stop $tenant_id
    ;;
  restart | force-reload)
    do_stop $tenant_id
    sleep 1
    do_start $tenant_id
    ;;
  status)
    echo "Smithproxy status $tenant_id"
    python2 /usr/share/smithproxy/infra/smithdog.py status
    ;;
  reload)
    echo "Reloading smithproxy policies $tenant_id"
    kill -USR1 `cat /var/run/smithproxy.${tenant_id}.pid`
    ;;
  bypass)
    do_bypass $tenant_id
    ;;
  unbypass)
    do_unbypass $tenant_id
    ;;
    
  fin)
    # leave TPROXY targets. Good for troubleshooting.
    python2 /usr/share/smithproxy/infra/smithdog.py stop $tenant_id
    ;;

  val)
    valgrind --leak-check=full --trace-children=yes --log-file=/var/log/smithproxy_val.log /usr/bin/smithproxy --daemonize
    ;;

  *)
    echo "Usage: /etc/init.d/smithproxy {start|stop|status|reload|restart|force-reload|bypass|unbypass} [tenant UUID]"
    echo "Debugs: /etc/init.d/smithproxy {fin|val}"
    echo "        fin - just terminate daemons, keep TPROXY rules up! This will disrupt traffic severely."
    echo "        val - run valgrind on smithproxy. Run it once, if it crashes, it stops Log goes to /var/log/smithproxy_val.log."
    echo "            - doesn't support tenants)"
    exit 1
    ;;
esac

exit 0
